// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Operands struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operands) Reset()         { *m = Operands{} }
func (m *Operands) String() string { return proto.CompactTextString(m) }
func (*Operands) ProtoMessage()    {}
func (*Operands) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}
func (m *Operands) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operands.Unmarshal(m, b)
}
func (m *Operands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operands.Marshal(b, m, deterministic)
}
func (m *Operands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operands.Merge(m, src)
}
func (m *Operands) XXX_Size() int {
	return xxx_messageInfo_Operands.Size(m)
}
func (m *Operands) XXX_DiscardUnknown() {
	xxx_messageInfo_Operands.DiscardUnknown(m)
}

var xxx_messageInfo_Operands proto.InternalMessageInfo

func (m *Operands) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *Operands) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type Operation struct {
	Operation            string   `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}
func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

type OpRequest struct {
	Operands             *Operands  `protobuf:"bytes,1,opt,name=operands,proto3" json:"operands,omitempty"`
	Operation            *Operation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OpRequest) Reset()         { *m = OpRequest{} }
func (m *OpRequest) String() string { return proto.CompactTextString(m) }
func (*OpRequest) ProtoMessage()    {}
func (*OpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}
func (m *OpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpRequest.Unmarshal(m, b)
}
func (m *OpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpRequest.Marshal(b, m, deterministic)
}
func (m *OpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpRequest.Merge(m, src)
}
func (m *OpRequest) XXX_Size() int {
	return xxx_messageInfo_OpRequest.Size(m)
}
func (m *OpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpRequest proto.InternalMessageInfo

func (m *OpRequest) GetOperands() *Operands {
	if m != nil {
		return m.Operands
	}
	return nil
}

func (m *OpRequest) GetOperation() *Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type OpResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpResponse) Reset()         { *m = OpResponse{} }
func (m *OpResponse) String() string { return proto.CompactTextString(m) }
func (*OpResponse) ProtoMessage()    {}
func (*OpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}
func (m *OpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpResponse.Unmarshal(m, b)
}
func (m *OpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpResponse.Marshal(b, m, deterministic)
}
func (m *OpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpResponse.Merge(m, src)
}
func (m *OpResponse) XXX_Size() int {
	return xxx_messageInfo_OpResponse.Size(m)
}
func (m *OpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpResponse proto.InternalMessageInfo

func (m *OpResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Operands)(nil), "calculator.Operands")
	proto.RegisterType((*Operation)(nil), "calculator.Operation")
	proto.RegisterType((*OpRequest)(nil), "calculator.OpRequest")
	proto.RegisterType((*OpResponse)(nil), "calculator.OpResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xb1, 0x4b, 0xc4, 0x30,
	0x14, 0xc6, 0xbd, 0x13, 0xcf, 0xeb, 0xbb, 0x7a, 0x43, 0xd0, 0x43, 0xc4, 0x41, 0xab, 0xc3, 0xb9,
	0x9c, 0xd2, 0x03, 0x07, 0x47, 0x11, 0x5c, 0x44, 0x21, 0xdd, 0x5c, 0xa4, 0xcd, 0x3d, 0xa1, 0xd0,
	0x26, 0xf5, 0x25, 0xf1, 0xef, 0x97, 0xa6, 0xa9, 0x0d, 0x75, 0x72, 0xeb, 0xfb, 0xf5, 0xcb, 0x2f,
	0x5f, 0x78, 0xb0, 0x16, 0x79, 0x25, 0x6c, 0x95, 0x1b, 0x45, 0xb7, 0xc3, 0x67, 0x53, 0x04, 0xc3,
	0xa6, 0x21, 0x65, 0x14, 0x83, 0x81, 0x24, 0x1c, 0xe6, 0x6f, 0x0d, 0x52, 0x2e, 0x77, 0x9a, 0x5d,
	0x42, 0xfc, 0x59, 0x92, 0x36, 0x1f, 0xd2, 0xd6, 0x05, 0xd2, 0xe9, 0xe4, 0x62, 0xb2, 0x3e, 0xe0,
	0x0b, 0xc7, 0x5e, 0x1d, 0x62, 0x57, 0x70, 0xa4, 0x51, 0x28, 0xb9, 0xeb, 0x33, 0x53, 0x97, 0x89,
	0x3b, 0xd8, 0x85, 0x92, 0x1b, 0x88, 0x9c, 0xd3, 0x94, 0x4a, 0xb2, 0x73, 0x88, 0x54, 0x3f, 0x38,
	0x63, 0xc4, 0x07, 0x90, 0x50, 0x1b, 0xe5, 0xf8, 0x65, 0x51, 0x1b, 0x76, 0x07, 0x73, 0xe5, 0xbb,
	0xb8, 0xe4, 0x22, 0x3d, 0xde, 0x04, 0xe5, 0xfb, 0x9e, 0xfc, 0x37, 0xc5, 0xb6, 0xa1, 0x7c, 0xea,
	0x8e, 0x9c, 0xfc, 0x39, 0xd2, 0xfe, 0x0c, 0xef, 0xbc, 0x06, 0x68, 0xef, 0xd4, 0x8d, 0x92, 0x1a,
	0xd9, 0x0a, 0x66, 0x84, 0xda, 0x56, 0xc6, 0x3f, 0xd7, 0x4f, 0xe9, 0x13, 0x40, 0x66, 0xeb, 0x0c,
	0xe9, 0xbb, 0x14, 0xc8, 0xee, 0x61, 0x3f, 0xb3, 0x35, 0x1b, 0xc9, 0x7d, 0xf1, 0xb3, 0xd5, 0x18,
	0x77, 0xee, 0x64, 0x2f, 0x7d, 0x81, 0xe5, 0x33, 0x4a, 0xa4, 0x52, 0xf4, 0xa6, 0x07, 0x38, 0xf4,
	0xe4, 0xdf, 0xb6, 0xc7, 0xe5, 0x7b, 0x1c, 0x6e, 0xb6, 0x98, 0xb9, 0x7d, 0x6e, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x53, 0xb0, 0x5d, 0xc2, 0xfb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SumServiceClient is the client API for SumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumServiceClient interface {
	//Unary api
	//Always in rpc request is a somethingRequest and output is a somethingResponse
	Sum(ctx context.Context, in *OpRequest, opts ...grpc.CallOption) (*OpResponse, error)
}

type sumServiceClient struct {
	cc *grpc.ClientConn
}

func NewSumServiceClient(cc *grpc.ClientConn) SumServiceClient {
	return &sumServiceClient{cc}
}

func (c *sumServiceClient) Sum(ctx context.Context, in *OpRequest, opts ...grpc.CallOption) (*OpResponse, error) {
	out := new(OpResponse)
	err := c.cc.Invoke(ctx, "/calculator.SumService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumServiceServer is the server API for SumService service.
type SumServiceServer interface {
	//Unary api
	//Always in rpc request is a somethingRequest and output is a somethingResponse
	Sum(context.Context, *OpRequest) (*OpResponse, error)
}

// UnimplementedSumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSumServiceServer struct {
}

func (*UnimplementedSumServiceServer) Sum(ctx context.Context, req *OpRequest) (*OpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}

func RegisterSumServiceServer(s *grpc.Server, srv SumServiceServer) {
	s.RegisterService(&_SumService_serviceDesc, srv)
}

func _SumService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.SumService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).Sum(ctx, req.(*OpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.SumService",
	HandlerType: (*SumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _SumService_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/calculatorpb/calculator.proto",
}

// GenericServiceClient is the client API for GenericService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GenericServiceClient interface {
	Generic(ctx context.Context, in *OpRequest, opts ...grpc.CallOption) (*OpResponse, error)
}

type genericServiceClient struct {
	cc *grpc.ClientConn
}

func NewGenericServiceClient(cc *grpc.ClientConn) GenericServiceClient {
	return &genericServiceClient{cc}
}

func (c *genericServiceClient) Generic(ctx context.Context, in *OpRequest, opts ...grpc.CallOption) (*OpResponse, error) {
	out := new(OpResponse)
	err := c.cc.Invoke(ctx, "/calculator.GenericService/Generic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GenericServiceServer is the server API for GenericService service.
type GenericServiceServer interface {
	Generic(context.Context, *OpRequest) (*OpResponse, error)
}

// UnimplementedGenericServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGenericServiceServer struct {
}

func (*UnimplementedGenericServiceServer) Generic(ctx context.Context, req *OpRequest) (*OpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Generic not implemented")
}

func RegisterGenericServiceServer(s *grpc.Server, srv GenericServiceServer) {
	s.RegisterService(&_GenericService_serviceDesc, srv)
}

func _GenericService_Generic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenericServiceServer).Generic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.GenericService/Generic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenericServiceServer).Generic(ctx, req.(*OpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GenericService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.GenericService",
	HandlerType: (*GenericServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Generic",
			Handler:    _GenericService_Generic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
